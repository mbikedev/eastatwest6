# Nginx configuration for serving pre-compressed files
# Add this to your nginx server block

# Enable gzip compression
gzip on;
gzip_vary on;
gzip_min_length 1024;
gzip_comp_level 6;
gzip_types
    text/plain
    text/css
    text/javascript
    text/xml
    text/json
    application/javascript
    application/json
    application/xml
    application/rss+xml
    application/atom+xml
    image/svg+xml;

# Enable Brotli compression (if module available)
brotli on;
brotli_comp_level 6;
brotli_min_length 1024;
brotli_types
    text/plain
    text/css
    text/javascript
    text/xml
    text/json
    application/javascript
    application/json
    application/xml
    application/rss+xml
    application/atom+xml
    image/svg+xml;

# Serve pre-compressed files when available
location ~* \.(js|css|svg|json|txt|xml|woff|woff2|ttf|eot)$ {
    gzip_static on;
    brotli_static on;
    
    # Cache static files for 1 year
    expires 1y;
    add_header Cache-Control "public, immutable";
    add_header Vary "Accept-Encoding";
}

# Special handling for RSC routes
location ~ /(.*)$ {
    if ($args ~ "_rsc=") {
        add_header Cache-Control "private, no-cache, no-store, max-age=0, must-revalidate";
        add_header Vary "Accept-Encoding";
    }
    try_files $uri $uri/ @nextjs;
}

location @nextjs {
    proxy_pass http://localhost:3000;
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection 'upgrade';
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_cache_bypass $http_upgrade;
    
    # Enable compression for proxy responses
    gzip_proxied any;
}